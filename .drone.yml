---
kind: pipeline
type: docker
name: cn_ws linux build + tests

steps:
  - name: build linux
    image: registry.fluves.net/drone/cn_ws/conda
    environment:
    commands:
      - git fetch --tags
      - make

  - name: test cnws runs without error
    image: debian:buster-slim
    commands:
      - testfiles/test.sh


  - name: get CNWS-processing repo for tests
    image: docker:git
    commands:
      - git clone https://git.fluves.net/fluves/CNWS-processing-scripts/

  - name: run python tests
    image: registry.fluves.net/drone/cn_ws/cnws_test
    commands:
      - virtualenv env -p /usr/bin/python3
      - . env/bin/activate
      - pip install -e CNWS-processing-scripts/pycnws/[develop]
      - pytest testfiles
    environment:
      PYTHONPATH: CNWS-processing-scripts/pycnws/src
---
kind: pipeline
type: docker
name: Build conda package (linux)

steps:
  - name: build conda package
    image: registry.fluves.net/drone/cn_ws/conda
    environment:
      GIT_LFS_SKIP_SMUDGE: 1 # due to a bug in conda: https://github.com/conda/conda-build/issues/1462
    commands:
    - mkdir conda_build
    - conda build . --output-folder conda_build
    - conda index conda_build
    - ls -R conda_build
  
  - name: upload conda package to S3
    image: plugins/s3
    settings:
      access_key: conda
      secret_key:
        from_secret: conda_secret_key
      bucket: conda
      source: conda_build/**/*.bz2
      target: /
      path_style: true
      endpoint: https://minio.fluves.net
      strip_prefix: conda_build/
    when:
      branch:
        - master
        - conda
      event:
        exclude:
          - pull_request
---
kind: pipeline
type: docker
name: Build debian package

steps:
  - name: build debian package
    image: registry.fluves.net/drone/cn_ws/debian11-build
    environment:
      GPG_KEY:
         from_secret: gpg-key
      DEBFULLNAME: "Fluves Drone CI"
      DEBEMAIL: donotreply@fluves.net
    commands:
      - gbp dch --snapshot --ignore-branch --snapshot-number=$DRONE_BUILD_NUMBER
      - debuild -b
      - mkdir package
      - mv ../cn-ws*amd64* package

  - name: rsync-apt
    image: drillster/drone-rsync
    settings:
      hosts:
        - ijzer
      user: docs
      key:
         from_secret: ssh-key
      source: package/*.deb
      target: /appdata/static/apt/amd64
    when:
      branch:
        - master
        - drone
      event:
        exclude:
          - pull_request

  # copy all packages from repo and rebuild index
  - name: Update repo
    image: registry.fluves.net/drone/cn_ws/debian11-build
    environment:
      GPG_KEY:
         from_secret: gpg-key
      SSH_KEY:
          from_secret: ssh-key
      DEBFULLNAME: "Fluves Drone CI"
      DEBEMAIL: donotreply@fluves.net
    commands:
      - mkdir -p ~/.ssh && echo "$SSH_KEY" > ~/.ssh/id_rsa && chmod og-rwx ~/.ssh/id_rsa
      - echo "$GPG_KEY" | gpg --import
      - mkdir apt-repo && cd apt-repo
      - rsync -az -e "ssh -p 22 -o StrictHostKeyChecking=no" docs@ijzer:/appdata/static/apt/amd64 .
      - apt-ftparchive packages amd64 > Packages
      - gzip -c Packages > Packages.gz
      - apt-ftparchive release . > Release
      - gpg --clearsign -o InRelease Release
      - gpg -abs -o Release.gpg Release
      - rsync -av . docs@ijzer:/appdata/static/apt/
    when:
      branch:
        - master
        - drone
      event:
        exclude:
          - pull_request


---
kind: pipeline
type: docker
name: documentation

steps:
  - name: fetch tags
    image: alpine/git
    commands:
    - git fetch --tags

  - name: build website
    image: python
    commands:
      - pip install -r ./docs/requirements.txt
      - sphinx-build ./docs ./docs/_build/

  - name: rsync-docs
    image: drillster/drone-rsync
    environment:
      RSYNC_KEY:
        from_secret: rsync_key
    settings:
      hosts:
        - 10.28.0.24
      user: docs
      key:
          from_secret: ssh-key
      source: ./docs/_build/
      recursive:
      args: "--rsync-path='mkdir -p /appdata/static/docs/cn_ws && rsync'"
      target: /appdata/static/docs/cn_ws
    when:
      branch:
        - master
      event:
        exclude:
          - pull_request

---
kind: pipeline
type: docker
name: windows build
platform:
  os: windows
  version: 1809


clone:
  disable: true
steps:
  - name: clone
    image: registry.fluves.net/prod/infrastructure/drone-git-lfs-windows

  - name: build compiled version
    image: registry.fluves.net/drone/cn_ws/lazarus-windows
    commands:
      - c:\lazarus\lazbuild.exe cn_ws\cn_ws.lpr
      # strip debug symbols
      - c:\lazarus\fpc\3.2.0\bin\x86_64-win64\strip.exe cn_ws\cn_ws.exe
  - name: windows - run tests
    image: registry.fluves.net/drone/cn_ws/lazarus-windows
    commands:
      - .\testfiles\test.bat
  - name: build conda package
    environment:
      GIT_LFS_SKIP_SMUDGE: 1 # due to a bug in conda: https://github.com/conda/conda-build/issues/1462
    image: registry.fluves.net/drone/cn_ws/windows-conda
    commands:
      # somehow the _netrc file has the wrong encoding
      # which makes it unparseable by curl/git
      # fixing that with my poor powershell skills
      - get-content c:/users/ContainerAdministrator/_netrc | out-file -encoding ASCII c:/users/ContainerAdministrator/_netrc_ascii
      - del c:/users/ContainerAdministrator/_netrc
      - mv c:/users/ContainerAdministrator/_netrc_ascii c:/users/ContainerAdministrator/_netrc
      - conda build conda --output-folder conda_build

  - name: upload conda package
    image: registry.fluves.net/drone/infrastructure/s3 
    settings:
      access_key: conda
      secret_key:
        from_secret: conda_secret_key
      bucket: conda
      source: conda_build/win-64/*.tar.bz2
      target: /
      path_style: true
      endpoint: https://minio.fluves.net
      strip_prefix: conda_build
    when:
      branch:
        - master
        - conda
      event:
        exclude:
          - pull_request

---
kind: pipeline
type: docker
name: conda reindex
depends_on:
  - windows build
  - Build conda package (linux)
steps:
- name: reindex conda repo
  image: registry.fluves.net/drone/infrastructure/conda-s3-index
  settings:
    access_key: conda
    secret_key:
      from_secret: conda_secret_key
    bucket: conda
    endpoint: https://minio.fluves.net
  when:
    branch:
      - master
      - conda
    event:
      exclude:
        - pull_request

---
kind: pipeline
name: check branch size difference
steps:
- name: check size
  image: registry.fluves.net/drone/infrastructure/git-file-size-diff
