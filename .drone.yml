---
kind: pipeline
type: docker
name: cn_ws linux build + tests

steps:
  - name: build linux
    image: registry.fluves.net/lazarus-build
    environment:
    commands:
      - make

  - name: test cnws runs without error
    image: registry.fluves.net/lazarus-build
    commands:
      - testfiles/test.sh

---
kind: pipeline
type: docker
name: Build debian package

steps:
  - name: build debian package
    image: registry.fluves.net/lazarus-build
    environment:
      GPG_KEY:
         from_secret: gpg-key
      DEBFULLNAME: "Fluves Drone CI"
      DEBEMAIL: donotreply@fluves.net
    commands:
      - gbp dch --snapshot --ignore-branch --snapshot-number=$DRONE_BUILD_NUMBER
      - debuild -b
      - mkdir package
      - mv ../cn-ws*amd64* package

  - name: rsync-apt
    image: drillster/drone-rsync
    settings:
      hosts:
        - ijzer
      user: docs
      key:
         from_secret: ssh-key
      source: package/*.deb
      target: /appdata/static/apt/amd64
    when:
      branch:
        - master
        - drone
      event:
        exclude:
          - pull_request

  # copy all packages from repo and rebuild index
  - name: Update repo
    image: registry.fluves.net/lazarus-build
    environment:
      GPG_KEY:
         from_secret: gpg-key
      SSH_KEY:
          from_secret: ssh-key
      DEBFULLNAME: "Fluves Drone CI"
      DEBEMAIL: donotreply@fluves.net
    commands:
      - mkdir -p ~/.ssh && echo "$SSH_KEY" > ~/.ssh/id_rsa && chmod og-rwx ~/.ssh/id_rsa
      - echo "$GPG_KEY" | gpg --import
      - mkdir apt-repo && cd apt-repo
      - rsync -az -e "ssh -p 22 -o StrictHostKeyChecking=no" docs@ijzer:/appdata/static/apt/amd64 .
      - apt-ftparchive packages amd64 > Packages
      - gzip -c Packages > Packages.gz
      - apt-ftparchive release . > Release
      - gpg --clearsign -o InRelease Release
      - gpg -abs -o Release.gpg Release
      - rsync -av . docs@ijzer:/appdata/static/apt/
    when:
      branch:
        - master
        - drone
      event:
        exclude:
          - pull_request


---
kind: pipeline
type: docker
name: documentation

steps:
  - name: build website
    image: python
    commands:
      - pip install -r ./docs/requirements.txt
      - sphinx-build ./docs ./docs/_build/

  - name: rsync-docs
    image: drillster/drone-rsync
    environment:
      RSYNC_KEY:
        from_secret: rsync_key
    settings:
      hosts:
        - 10.28.0.24
      user: docs
      key:
          from_secret: ssh-key
      source: ./docs/_build/
      recursive:
      args: "--rsync-path='mkdir -p /appdata/static/docs/cnws-pascal && rsync'"
      target: /appdata/static/docs/cnws-pascal
    when:
      branch:
        - master
      event:
        exclude:
          - pull_request

---
kind: pipeline
type: docker
name: windows build
platform:
  os: windows
  version: 1809


clone:
  disable: true
steps:
  - name: clone
    image: registry.fluves.net/drone-git-lfs-windows

  - name: build compiled version
    image: registry.fluves.net/lazarus-windows
    commands:
      - c:\lazarus\lazbuild.exe cn_ws\cn_ws.lpr
      # strip debug symbols
      - c:\lazarus\fpc\3.2.0\bin\x86_64-win64\strip.exe cn_ws\cn_ws.exe
  - name: windows - run tests
    image: registry.fluves.net/lazarus-windows
    commands:
      - .\testfiles\test.bat
