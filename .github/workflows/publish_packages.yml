name: publish_packages

on:
  pull_request:
  create:
    tags:
  workflow_dispatch:

env:
  DEBIAN_RSYNC_TARGET: /appdata/static/apt/amd64
  DRONE_BUILD_NUMBER: ${{ github.run_number }}
  RSYNC_USER: docs
  RSYNC_HOST: ijzer
jobs:
  build-packages:
    uses: ./.github/workflows/build.yml

  build-windows-packages:
    uses: ./.github/workflows/build-windows.yml

  publish-github:
    needs: [build-packages, build-windows-packages]
    if: contains(github.ref , 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@master
      with:
        name: linux-amd64-binary
        path: linux
    - uses: actions/download-artifact@master
      with:
        name: windows-compiled
        path: windows
    - uses: actions/download-artifact@master
      with:
        name: debian-output
        path: debian
    - uses: ncipollo/release-action@v1
      with:
        artifacts: "linux/*,windows/*,debian/*.deb"
        omitBody: true

  publish-debian-fluves:
    # publish the apt package on the fluves repository
    needs: [build-packages]
    runs-on: [self-hosted, linux]
    container: registry.fluves.net/drone/cn_ws/debian11-build
    env:
      SSH_KEY: ${{secrets.SSH_KEY}}
      GPG_KEY: ${{secrets.GPG_KEY}}
      DEBFULLNAME: "Fluves Drone CI"
      DEBEMAIL: donotreply@fluves.net
    steps:
      - uses: actions/download-artifact@master
        with:
          name: debian-output
          path: /package
      
      - name: rsync-apt
        shell: bash
        run: |
          mkdir -p /.ssh && echo "$SSH_KEY" > /.ssh/private.key && chmod og-rwx /.ssh/private.key
          rsync -av -e "ssh -p 22 -o StrictHostKeyChecking=no -i /.ssh/private.key" /package/*.deb $RSYNC_USER@$RSYNC_HOST:$DEBIAN_RSYNC_TARGET 

      - name: rsync
        shell: bash
        run: |
          mkdir -p /.ssh && echo "$SSH_KEY" > /.ssh/private.key && chmod og-rwx /.ssh/private.key
          cat <(echo -e "$GPG_KEY") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
          mkdir -p apt-repo && cd apt-repo
          rsync -az -e "ssh -p 22 -o StrictHostKeyChecking=no -i /.ssh/private.key" $RSYNC_USER@$RSYNC_HOST:$DEBIAN_RSYNC_TARGET .

      - name: Make archive
        shell: bash
        run: |
          cd apt-repo
          apt-ftparchive packages amd64 > Packages
          gzip -c Packages > Packages.gz
          apt-ftparchive release . > Release
          gpg --clearsign -o InRelease Release
          gpg -abs -o Release.gpg Release
          rsync -av -e "ssh -p 22 -o StrictHostKeyChecking=no -i /.ssh/private.key" . $RSYNC_USER@$RSYNC_HOST:/appdata/static/apt/
    
